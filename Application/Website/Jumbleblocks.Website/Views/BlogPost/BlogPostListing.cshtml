@using Jumbleblocks.Core.Security;

@model IEnumerable<Jumbleblocks.Website.Models.BlogPost.BlogPostListingItemModel>

@{
    ViewBag.Title = "ArticleListing";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>All Published Articles</h2>

@{
    bool canEditPost = User.CanPerformOperation("Edit Blog Post");
    bool canDeletePost = User.CanPerformOperation("Delete Blog Post");
}

<div class="articleListingTable">
   <ul class="articleListingRow articleListingHeader">
       <li class="articleListingCell">Id</li> 
       <li class="articleListingCell">Title</li> 
       <li class="articleListingCell">Publication Date</li> 
       <li class="articleListingCell">Authors Name</li>
       @if(canEditPost) { <li class="articleListingCell"></li> }
       @if (canDeletePost) { <li class="articleListingCell"></li> }
   </ul>

   @{
       bool isOddRow = true;

       foreach (var actualModel in Model)
       {
           isOddRow = !isOddRow;

           var rowClassName = isOddRow ? "odd" : "even";
       
           <ul class="articleListingRow @rowClassName">
               <li class="articleListingCell">@actualModel.BlogPostId</li> 
               <li class="articleListingCell">@actualModel.Title</li>
               <li class="articleListingCell">@actualModel.PublishedDate.ToString("dd/MM/yyyy")</li>
               <li class="articleListingCell">@actualModel.AuthorsName</li>
               @if (canEditPost) { <li class="articleListingCell">@Html.ActionLink("Edit", "Edit", new { blogPostId = actualModel.BlogPostId })</li>}
               @if (canDeletePost) { <li class="articleListingCell">@Html.ActionLink("Delete", "Delete", new { blogPostId = actualModel.BlogPostId })</li>}
           </ul>
       }                                                                               
   }
   
</div>
